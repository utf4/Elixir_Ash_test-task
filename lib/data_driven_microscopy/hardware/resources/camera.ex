defmodule DataDrivenMicroscopy.Hardware.Camera do
  use Ash.Resource, data_layer: AshPostgres.DataLayer

  postgres do
    repo(DataDrivenMicroscopy.Repo)
    table "cameras"
  end

  actions do
    # Add a set of simple actions. You'll customize these later.
    defaults [:read, :destroy]

    create :create do
      primary? true
      argument :system_id, :uuid

      change manage_relationship(:system_id, :system, type: :append_and_remove)
    end

    update :update do
      primary? true
      argument :system_id, :uuid

      change manage_relationship(:system_id, :system, type: :append)
    end

    update :calibration do
      argument :calibration_id, :uuid

      change manage_relationship(:calibration_id, :camera_calibration, type: :append_and_remove)
    end
  end

  # Attributes are the simple pieces of data that exist on your resource
  attributes do
    # Add an autogenerated UUID primary key called `:id`.
    uuid_primary_key :id

    # Add a string type attribute called `:name`
    attribute :name, :string do
      allow_nil? false
    end
  end

  relationships do
    # Add a relationship to the `:system` resource.
    belongs_to :system, DataDrivenMicroscopy.Hardware.System
    has_one :camera_calibration, DataDrivenMicroscopy.Hardware.CameraCalibration
  end
end
